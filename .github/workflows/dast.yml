on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read
  checks: write
  packages: write

jobs:
  dast-scan:
    name: DAST Scan
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 
        with:
          gradle-version: 8.5

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Install Docker Compose
        run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      
      - name: Run application in container to scan with ZAP
        run: |
          docker rm -f github-action-pipeline || ture
          docker rm -f github-action-pipeline-db || true
          docker-compose up -d
        # docker run -d -p 9090:9090 --name github-action-pipeline ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
    
      - name: Wait 10 seconds to start application
        run: sleep 10

      - name: Application container logs
        run: docker logs github-action-pipeline

      - name: Test container is running
        run: curl -s localhost:9090/com.amazingcode.in/api/message
     
      - name: Run ZAP OWASP full scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          target: 'http://localhost:9090'
          cmd_options: '-a -j -l WARN -r report_html.html -w report_md.md -J report_json.json -z "-addoninstallall" '
          allow_issue_writing: true

      - name: Upload json report
        uses: actions/upload-artifact@v3
        with:
          name: DAST_Report.json
          path: ./report_json.json

      - name: Upload html report
        uses: actions/upload-artifact@v3
        with:
          name: DAST_Report.html
          path: ./report_html.html

      - name: Package JSON Report into a Container
        run: |
          echo "FROM alpine" > Dockerfile
          echo "COPY report_json.json /report_json.json" >> Dockerfile
          echo "CMD [\"cat\", \"/report_json.json\"]" >> Dockerfile
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/dast-report:latest .

      - name: Push JSON Report to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/dast-report:latest

      - name: stop docker
        if: always()
        run: |
          docker-compose down
          docker stop github-action-pipeline || true
          docker rm github-action-pipeline || true
          docker container prune --force || true
          docker image prune --force || true